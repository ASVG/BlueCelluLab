#!/usr/bin/env python
""" bglibpy setup """
import sys

try:
    from setuptools import setup
except ImportError:
    from distutils.core import setup  # pylint: disable=E0611,F0401

# import distutils.command.build

REQS = []
# check if in virtualenv, install requirements.txt
if hasattr(sys, 'real_prefix'):
    try:
        from pip.req import parse_requirements
        from optparse import Option
        OPTIONS = Option("--workaround")
        OPTIONS.skip_requirements_regex = None
        INSTALL_REQS = parse_requirements(
            "./requirements.txt",
            options=OPTIONS)
        REQS = [str(ir.req) for ir in INSTALL_REQS]
    except:  # pylint: disable=W0702
        pass


"""
class bglibpy_build(distutils.command.build.build):

    def __init__(self, *args, **kwargs):
        distutils.command.build.build.__init__(self, *args, **kwargs)

    def initialize_options(self):
        distutils.command.build.build.initialize_options(self)

    def run(self):
        print 'build'
        import os
        os.mkdir('bglibpy')
        distutils.command.build.build.run()
"""

setup(
    name="bglibpy",
    version=1.0,
    install_requires=REQS,
    packages=['bglibpy'],
    package_data={'bglibpy': ['paths.config', '@NRNMECH_PATH@']},
    author="Werner Van Geit",
    author_email="werner.vangeit@epfl.ch",
    description="The Pythonic Blue Brain simulator access",
    license="BBP-internal-confidential",
    keywords=('computational neuroscience',
              'simulation',
              'analysis',
              'visualization',
              'parameters',
              'BlueBrainProject'),
    url="http://bluebrain.epfl.ch",
    classifiers=['Development Status :: 3 - Alpha',
                 'Environment :: Console',
                 'License :: Proprietary',
                 'Operating System :: POSIX',
                 'Topic :: Scientific/Engineering',
                 'Topic :: Utilities',
                 ],
    # cmd_class = {
    #    'build': bglibpy_build,
    # }
)
