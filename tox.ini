[tox]
# minimally required tox version
minversion=4.0.0
envlist = py3-test-v5-v6

[base]
name = bglibpy

[testenv]
envdir =
    py3{-test,-v5,-v6,-thal,}: {toxworkdir}/py3
    py37{-test,-v5,-v6,-thal,}: {toxworkdir}/py37
    py38{-test,-v5,-v6,-thal,}: {toxworkdir}/py38
    py39{-test,-v5,-v6,-thal,}: {toxworkdir}/py39
    py310{-test,-v5,-v6,-thal,}: {toxworkdir}/py310
passenv = KRB5CCNAME, https_proxy, GIT_SSH_COMMAND
extras  = blueconfig
deps =
    pytest
    pytest-cov
    pytest-timeout
    pytest-xdist  # multiprocessing
    pytest-forked  # isolation
download = true
allowlist_externals =
    make
    ./.compile_mod.sh
    coverage
coverage_options = --cov-append --cov-report=xml --cov-config=.coveragerc --cov={[base]name} --cov=tests
setenv =
    PIP_INDEX_URL = https://bbpteam.epfl.ch/repository/devpi/bbprelman/dev/+simple
    PIP_EXTRA_INDEX_URL = https://pypi.python.org/simple

    NEURON_MODULE_OPTIONS='-nogui'

    OMP_NUM_THREADS=1
commands =
    make clean

    v5,v6,debugtest: ./.compile_mod.sh . tests/mechanisms

    test: pytest {[testenv]coverage_options} tests --numprocesses=auto --timeout=600 -vsx -m "not v5 and not v6 and not debugtest" --forked

    debugtest: pytest -v -m debugtest
    v5: pytest {[testenv]coverage_options} tests --numprocesses=auto --timeout=600 -vsx -m v5 --forked

    v6: pytest {[testenv]coverage_options} tests --numprocesses=auto --timeout=600 -vsx -m v6 --forked

    coverage report --show-missing
    coverage xml

[testenv:lint]
envdir={toxworkdir}/{envname}
deps =
    pycodestyle
    mypy
    pandas-stubs>=2.0.0
    types-setuptools
commands =
    pycodestyle {[base]name} --ignore=E501,W504,W503
    pycodestyle tests --ignore=E501,W504,W503,E741
    mypy . --ignore-missing-imports --disable-error-code=call-overload  # remove once pandas-stubs makes a release after 1.5.3.230321 

[testenv:docs]
envdir =
    docs: {toxworkdir}/{envname}
deps =
    sphinx<5.1.0
    sphinx-bluebrain-theme
commands =
    sphinx-build -b html -d doc/build/doctrees doc/source  doc/build/html

[testenv:upload_docs]
envdir={toxworkdir}/{envname}
passenv = DOCS_INTERNAL_TOKEN, DOCS_INTERNAL_TOKEN_NAME, CI
deps =
    docs-internal-upload
commands =
    python ./.upload_docs.py doc/build/html
    docs-internal-upload --docs-path doc/build/html --use-major-minor-only --no-duplicate-version-error
